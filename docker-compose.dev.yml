version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: diary_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: diary_db
      MYSQL_USER: diary_user
      MYSQL_PASSWORD: diary_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./backend/src/main/resources/data/dummy_data_6_30_7_6.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - diary_network_dev

  # Redis (AI 서비스용)
  redis:
    image: redis:7-alpine
    container_name: diary_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - diary_network_dev

  # AI 서비스 (개발 모드)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: diary_ai_service_dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ai_service_data_dev:/app/data
      - ./ai-service:/app
    depends_on:
      - redis
    networks:
      - diary_network_dev
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Spring Boot 백엔드 (개발 모드)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: diary_backend_dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/diary_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=diary_user
      - SPRING_DATASOURCE_PASSWORD=diary_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - AI_SERVICE_URL=http://ai-service:8000
      - SPRING_PROFILES_ACTIVE=dev
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - ai-service
    networks:
      - diary_network_dev

volumes:
  mysql_data_dev:
    driver: local
  ai_service_data_dev:
    driver: local

networks:
  diary_network_dev:
    driver: bridge 